{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Desktop\\\\PrograWeb\\\\Sistema-de-Cursos-de-Extensi-n\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm'; // Ruta actualizada a la carpeta 'components'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const [loading, setLoading] = useState(false); // Estado para manejar la carga\n  const [message, setMessage] = useState(''); // Estado para el mensaje de éxito o error\n  const navigate = useNavigate();\n  const handleRegisterSuccess = token => {\n    setLoading(true); // Inicia el estado de carga\n    setMessage('Registro completo'); // Establece el mensaje de éxito\n\n    // Simulamos la redirección después de 3 segundos\n    setTimeout(() => {\n      // Guarda el token en el localStorage\n      localStorage.setItem('token', token);\n\n      // Redirige a la página de inicio de sesión\n      navigate('/', {\n        state: {\n          message: 'Registro completado'\n        }\n      }); // Usamos `state` para pasar el mensaje\n    }, 3000); // 3 segundos de espera\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(AuthForm, {\n      onLoginSuccess: handleRegisterSuccess,\n      isRegister: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"EytqnUB4idebd6PjE2wHrN0CCWc=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","useNavigate","AuthForm","jsxDEV","_jsxDEV","RegisterPage","_s","loading","setLoading","message","setMessage","navigate","handleRegisterSuccess","token","setTimeout","localStorage","setItem","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","isRegister","_c","$RefreshReg$"],"sources":["C:/Users/Gabriel/Desktop/PrograWeb/Sistema-de-Cursos-de-Extensi-n/frontend/src/pages/RegisterPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm'; // Ruta actualizada a la carpeta 'components'\n\nfunction RegisterPage() {\n  const [loading, setLoading] = useState(false);  // Estado para manejar la carga\n  const [message, setMessage] = useState('');  // Estado para el mensaje de éxito o error\n  const navigate = useNavigate();\n\n  const handleRegisterSuccess = (token) => {\n    setLoading(true); // Inicia el estado de carga\n    setMessage('Registro completo');  // Establece el mensaje de éxito\n\n    // Simulamos la redirección después de 3 segundos\n    setTimeout(() => {\n      // Guarda el token en el localStorage\n      localStorage.setItem('token', token);\n\n      // Redirige a la página de inicio de sesión\n      navigate('/', { state: { message: 'Registro completado' } }); // Usamos `state` para pasar el mensaje\n    }, 3000);  // 3 segundos de espera\n  };\n\n  return (\n    <div className=\"register-page\">\n      <h1>Registrarse</h1>\n\n      {/* Si está cargando, mostramos un símbolo de carga */}\n      {loading && <div className=\"loading\">Cargando...</div>}\n      \n      {/* Mostrar el mensaje de éxito si se ha completado el registro */}\n      {message && <div className=\"success-message\">{message}</div>}\n\n      <AuthForm onLoginSuccess={handleRegisterSuccess} isRegister />\n    </div>\n  );\n}\n\nexport default RegisterPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;EAChD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC7C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,qBAAqB,GAAIC,KAAK,IAAK;IACvCL,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBE,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAE;;IAElC;IACAI,UAAU,CAAC,MAAM;MACf;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;;MAEpC;MACAF,QAAQ,CAAC,GAAG,EAAE;QAAEM,KAAK,EAAE;UAAER,OAAO,EAAE;QAAsB;MAAE,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE;EACb,CAAC;EAED,oBACEL,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bf,OAAA;MAAAe,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGnBhB,OAAO,iBAAIH,OAAA;MAAKc,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAGrDd,OAAO,iBAAIL,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE5DnB,OAAA,CAACF,QAAQ;MAACsB,cAAc,EAAEZ,qBAAsB;MAACa,UAAU;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV;AAACjB,EAAA,CAhCQD,YAAY;EAAA,QAGFJ,WAAW;AAAA;AAAAyB,EAAA,GAHrBrB,YAAY;AAkCrB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}